}
avgsulfate
}
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean <- function(directory,pollutant,id){
directory <- character(1)
id <- integer(lenth(id))
pollutant <- character(1)
avgsulfate <- numeric(length(id))
avgnitrate <- numeric(length(id))
filenames <- list.files("directory", pattern="*.csv", full.names=TRUE)
for(i in id){
x <- na.omit(read.csv(filenames[i]))
avgsulfate[i] <- mean(x,"sulfate")
avgnitrate[i] <- mean(x,"nitrate")
}
}
pollutantmean <- function(directory,pollutant,id){
directory <- character(1)
id <- integer(lenth(id))
pollutant <- character(1)
avgsulfate <- numeric(length(id))
avgnitrate <- numeric(length(id))
filenames <- list.files("directory", pattern="*.csv", full.names=TRUE)
for(i in id){
x <- na.omit(read.csv(filenames[i]))
avgsulfate[i] <- mean(x,"sulfate")
avgnitrate[i] <- mean(x,"nitrate")
}
mean(avgsulfate)
}
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean <- function(directory,pollutant,id){
directory <- character(1)
id <- integer(length(id))
pollutant <- character(1)
avgsulfate <- numeric(length(id))
avgnitrate <- numeric(length(id))
filenames <- list.files("directory", pattern="*.csv", full.names=TRUE)
for(i in id){
x <- na.omit(read.csv(filenames[i]))
avgsulfate[i] <- mean(x,"sulfate")
avgnitrate[i] <- mean(x,"nitrate")
}
mean(avgsulfate)
}
pollutantmean <- function(directory,pollutant,id){
directory <- character(1)
id <- integer(length(id))
pollutant <- character(1)
avgsulfate <- numeric(length(id))
avgnitrate <- numeric(length(id))
filenames <- list.files("directory", pattern="*.csv", full.names=TRUE)
for(i in id){
x <- na.omit(read.csv(filenames[i]))
avgsulfate[i] <- mean(x,"sulfate")
avgnitrate[i] <- mean(x,"nitrate")
}
mean(avgsulfate)
}
pollutantmean <- function(directory,pollutant,id){
directory <- character(length = 1)
id <- integer(length(id))
pollutant <- character(length = 1)
avgsulfate <- numeric(length(id))
avgnitrate <- numeric(length(id))
filenames <- list.files("directory", pattern="*.csv", full.names=TRUE)
for(i in id){
x <- na.omit(read.csv(filenames[i]))
avgsulfate[i] <- mean(x,"sulfate")
avgnitrate[i] <- mean(x,"nitrate")
}
mean(avgsulfate)
}
set.seed(10)
x <- rbinom(10, 10, 0.5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
plot(x,y)
Rporf(NULL)
library(datasets)
Rprof()
Rprof(NULL)
set.seed(1)
rpois(5,2)
set.seed(10)
x <- rbinom(10, 10, 0.5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
plot(x,y)
>connections
?connections
par()
library(datasets)
plot(wind,ozone)
ozone
x<-rnorm(100)
hist(x)
y<-rnorm(50)
plot(x,y)
y<-rnorm(100)
plot(x,y)
plot(x,y,pch=4)
plot(x,y,pch=3)
plot(x,y,pch=7)
plot(x,y,pch=19)
plot(x,y,pch=18)
plot(x,y,pch=17)
pdf(file="myplot.pdf")
plot(x,y,pch=20)
dev.off()
dev.set(3)
dev.set(2)
plot(x,y,pch=20)
plot(x,y,pch=18)
png(file="sample.png",width = 480, height = 480, bg = 6)
x<-c(2,4)
y<-c(6,8)
plot(x,y)
dev.off()
png(file="sample.png",width = 480, height = 480, bg = 6)
> x<-c(2,4)
> y<-c(6,8)
> plot(x,y)
png(file="sample.png",width=480,height=480,bg=NULL)
png(file="sample.png",width = 480, height = 480, bg = "transparent")
> x<-c(2,4)
x<-c(2,4)
y<-c(6,8)
plot(x,y)
dev.off()
dev.off()
dev.off()
png(file="sample.png",width = 480, height = 480, bg = "transparent")
x<-c(2,4)
y<-c(6,8)
plot(x,y)
dev.off()
z <- strptime("20/2/06 11:16:16.683", "%d/%m/%y %H:%M:%OS")
z
day(z)
weekdays(z)
wday(z)
library(lubridate)
library(lubridate)
wday(z)
weekday(z)
wday(z)
wday(z, label=TRUE)
wday(z)
q()
install.packages("lattice")
install.packages("ggplot2")
library(ggplot2)
mpg
str(mpg)
qplot(displ,hwy)
qplot(displ,hwy,data=mpg)
qplot(displ,hwy,data=mpg,color=drv)
qplot(displ,hwy,data=mpg,color=manufacturer)
qplot(displ,hwy,data=mpg,geom="smooth")
qplot(displ,hwy,data=mpg,geom="points")
qplot(displ,hwy,data=mpg,geom="point")
qplot(displ,hwy,data=mpg)
displ
mpg$displ
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
xyplot(mtcars$displ ~ mtcars$hwy | mtcars$drv)
xyplot(mtcars$displ ~ mtcars$hwy | mtcars$drv,mtcars$manufacturer)
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
names(airquality)
class(Month)
class(airquality$Month)
airquality$Month
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality)
qplot(Wind, Ozone, data = airquality) + geom_smooth()
qplot(Wind, Ozone, data = airquality) + stats_smooth("loess")
rnorm(10,4,0.5)
rnorm(10,rep(1:5,each=2),0.2)
set.seed(123)
x<-matrix(rnorm(400),nrows=40)
x<-matrix(rnorm(400),nrow=40)
image(1:10,1:40,t(x)[,nrow(x):1])
image(1:10,1:40,t(x)[,40:1])
image(1:10,1:40,t(x)[,20:1])
image(1:10,1:40,t(x)[,40:1])
heatmap(x)
image(1:10,1:40,t(x)[,40:1])
heatmap(x)
image(1:10,1:40,t(x)[,40:1])
heatmap(x)
## Reading data from current working directory
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
X <- by(NEI$Emissions,NEI$year,sum)
## Plotting the data
png(filename = "plot1.png",width = 480, height = 480)
plot(x,col="red",xlab="Year",cex=2,ylab="Total PM2.5 Emissions (Ktons)"
,pch=17,xaxt="n",yaxt="n",main="Total PM2.5 emissions across USA")
lines(x,lty=4,col="red",lwd=1.5)
axis(side=1,at=c(1,2,3,4),labels=unique(NEI$year))
axis(side=2,at=seq(3000000,8000000,1000000),labels=seq(3000,8000,1000))
dev.off()
## Reading data from current working directory
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
X <- by(NEI$Emissions,NEI$year,sum)
## Plotting the data
png(filename = "plot1.png",width = 480, height = 480)
plot(x,col="red",xlab="Year",cex=2,ylab="Total PM2.5 Emissions (Ktons)"
,pch=17,xaxt="n",yaxt="n",main="Total PM2.5 emissions across USA")
lines(x,lty=4,col="red",lwd=1.5)
axis(side=1,at=c(1,2,3,4),labels=unique(NEI$year))
axis(side=2,at=seq(3000000,8000000,1000000),labels=seq(3000,8000,1000))
dev.off()
## Reading data from current working directory
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
x <- by(NEI$Emissions,NEI$year,sum)
## Plotting the data
png(filename = "plot1.png",width = 480, height = 480)
plot(x,col="red",xlab="Year",cex=2,ylab="Total PM2.5 Emissions (Ktons)"
,pch=17,xaxt="n",yaxt="n",main="Total PM2.5 emissions across USA")
lines(x,lty=4,col="red",lwd=1.5)
axis(side=1,at=c(1,2,3,4),labels=unique(NEI$year))
axis(side=2,at=seq(3000000,8000000,1000000),labels=seq(3000,8000,1000))
dev.off()
## Reading data from current working directory
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
x <- by(NEI$Emissions,NEI$year,sum)
## Plotting the data
png(filename = "plot1.png",width = 480, height = 480)
plot(x,col="red",xlab="Year",cex=2,ylab="Total PM2.5 Emissions (Ktons)"
,pch=17,xaxt="n",yaxt="n",main="Total PM2.5 emissions across USA")
lines(x,lty=4,col="red",lwd=1.5)
axis(side=1,at=c(1,2,3,4),labels=unique(NEI$year))
axis(side=2,at=seq(3000000,8000000,1000000),labels=seq(3000,8000,1000))
dev.off()
## Reading data from current working directory
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
em <- by(NEI$Emissions,NEI$year,sum)
## Plotting the data
png(filename = "plot1.png",width = 480, height = 480)
plot(em,col="red",xlab="Year",cex=2,ylab="Total PM2.5 Emissions (Ktons)"
,pch=17,xaxt="n",yaxt="n",main="Total PM2.5 emissions across USA")
lines(em,lty=4,col="red",lwd=1.5)
axis(side=1,at=c(1,2,3,4),labels=unique(NEI$year))
axis(side=2,at=seq(3000000,8000000,1000000),labels=seq(3000,8000,1000))
dev.off()
## Reading data from current working directory
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
em <- by(NEI$Emissions,NEI$year,sum)
## Plotting the data
png(filename = "plot1.png",width = 480, height = 480)
plot(em,col="red",xlab="Year",cex=2,ylab="Total PM2.5 Emissions (Ktons)"
,pch=17,xaxt="n",yaxt="n",main="Total PM2.5 emissions across USA")
lines(em,lty=4,col="red",lwd=1.5)
axis(side=1,at=c(1,2,3,4),labels=unique(NEI$year))
axis(side=2,at=seq(3000000,8000000,1000000),labels=seq(3000,8000,1000))
dev.off()
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
em <- by(NEI$Emissions,NEI$year,sum)
## Plotting the data
png(filename = "plot1.png",width = 480, height = 480)
plot(em,col="red",xlab="Year",cex=2,ylab="Total PM2.5 Emissions (Ktons)"
,pch=17,xaxt="n",yaxt="n",main="Total PM2.5 emissions across USA")
lines(em,lty=4,col="red",lwd=1.5)
axis(side=1,at=c(1,2,3,4),labels=unique(NEI$year))
axis(side=2,at=seq(3000000,8000000,1000000),labels=seq(3000,8000,1000))
dev.off()
## Reading data from current working directory
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
## Merging the two dataframes
total <- merge(NEI,SSC,by=intersect(names(NEI),names(SSC)))
coal <- subset(total,total$EI.Sector == "Fuel Comb - Electric Generation - Coal")
png(filename = "plot5.png",width = 480, height = 480)
library(ggplot2)
g <- ggplot(coal,aes(year,Emissions)) +
geom_point(aes(color=year),size=4,alpha=0.5)+
geom_smooth(size=2,method="lm")+
ggtitle("Emissions from Coal Combustion Sources")+
ylab("Emissions in tons")+xlab("Year")
print(g)
dev.off()
## Reading data from current working directory
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
## Merging the two dataframes
total <- merge(NEI,SSC,by=intersect(names(NEI),names(SSC)))
coal <- subset(total,total$EI.Sector == "Fuel Comb - Electric Generation - Coal")
png(filename = "plot5.png",width = 480, height = 480)
library(ggplot2)
g <- ggplot(coal,aes(year,Emissions)) +
geom_point(aes(color=year),size=4,alpha=0.5)+
geom_smooth(size=2,method="lm")+
ggtitle("Emissions from Coal Combustion Sources")+
ylab("Emissions in tons")+xlab("Year")
print(g)
dev.off()
## Reading data from current working directory
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
## Merging the two dataframes
total <- merge(NEI,SSC,by=intersect(names(NEI),names(SSC)))
coal <- subset(total,total$EI.Sector == "Fuel Comb - Electric Generation - Coal")
png(filename = "plot5.png",width = 480, height = 480)
library(ggplot2)
coalplot <- ggplot(coal,aes(year,Emissions)) +
geom_point(aes(color=year),size=4,alpha=0.5)+
geom_smooth(size=2,method="lm")+
ggtitle("Emissions from Coal Combustion Sources")+
ylab("Emissions in tons")+xlab("Year")
print(coalplot)
dev.off()
## Reading data from current working directory
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
## Merging the two dataframes
total <- merge(NEI,SSC,by=intersect(names(NEI),names(SSC)))
coal <- subset(total,total$EI.Sector == "Fuel Comb - Electric Generation - Coal")
png(filename = "plot5.png",width = 480, height = 480)
library(ggplot2)
coalplot <- ggplot(coal,aes(year,Emissions)) +
geom_point(aes(color=year),size=4,alpha=0.5)+
geom_smooth(size=2,method="lm")+
ggtitle("Emissions from Coal Combustion Sources")+
ylab("Emissions in tons")+xlab("Year")
print(coalplot)
dev.off()
name(x)
x
dist1
rawdata <- read.csv("activity.csv")
dailysteps <- aggregate(rawdata$steps,list(date=rawdata$date),mean)
hist(dailysteps$x,xlab="Mean steps per day",ylim=c(0,25),col = "red",
     main="Mean steps taken per day")
stepsmean <- mean(dailysteps$x,na.rm=TRUE)
stepsmedian <- median(dailysteps$x,na.rm=TRUE)
round(stepsmedian,2)
round(stepsmean,2)
 hist(dailysteps$x,xlab="Mean steps per day",ylim=c(0,25),col = "red",
 hist(dailysteps$x,xlab="Mean steps per day",ylim=c(0,25),col = "red",
+      main="Mean steps taken per day",xaxt="n")
hist(dailysteps$x,xlab="Mean steps per day",ylim=c(0,25),col = "red",
     main="Mean steps taken per day",xaxt="n")
axes(1,at=dailysteps$x,labels=dailysteps$x)
axis(1,at=dailysteps$x,labels=dailysteps$x)
axis(1,at=seq(10:100,10),labels=seq(10:100,10))
axis(1,at=seq(10,100,10),labels=seq(10,100,10))
hist(dailysteps$x,xlab="Mean steps per day",ylim=c(0,25),col = "red",
     main="Mean steps taken per day",xaxt="n")
axis(1,at=seq(10,100,10),labels=seq(10,100,10))
hist(dailysteps$x,xlab="Mean steps per day",ylim=c(0,25),col = "red",
     main="Mean steps taken per day")
hist(dailysteps$x,xlab="Mean steps per day",ylim=c(0,25),col = "red",
     main="Mean steps taken per day",xaxt="n")
axis(1,at=seq(0,80,10),labels=seq(0,80,10))
head(rawdata)
head(rawdata,20)
x<-complete.cases(rawdata)
nrow(x)
dim(x)
mean(rawdata$steps)
rawdata <- read.csv("activity.csv")
dim(rawdata)
mean(rawdata$steps)
mean(rawdata$steps,na.rm=TRUE)
unique(rawdata$interval)
intsteps <- aggregate(rawdata$steps,list=(interval=rawdata$interval),mean)
intsteps <- aggregate(rawdata$steps,list(interval=rawdata$interval),mean)
intsteps
intsteps <- aggregate(rawdata$steps,list(interval=rawdata$interval),mean,na.rm=TRUE)
intsteps
colnames(intsteps)<-c("interval","intervalMean")
head(intsteps)
head(rawdata)
a<-is.na(rawdata$steps)
table(a)
factor(a)
class(a)
rawdata$steps(a)
rawdata$steps[a
]
table(a)
head(rawdata)
length(rawdata)
nrow(rawdata$steps)
length(rawdata$steps)
for(i in 1:17568){
  if(rawdata$steps[i] == NA){
    rawdata$steps[i] <- insteps$intMean[rawdata$interval[i]]
  }
}
for(i in 1:17568){
  if(rawdata$steps[i] == NA){
    rawdata$steps[i] <- insteps$intMean[rawdata$interval[i]]
  } else {}
}
for(i in 1:17568){
  if(is.na(rawdata$steps[i]) == TRUE){
    rawdata$steps[i] <- insteps$intMean[rawdata$interval[i]]
  } else {}
}
for(i in 1:17568){
  if(is.na(rawdata$steps[i]) == TRUE){
    rawdata$steps[i] <- intsteps$intMean[rawdata$interval[i]]
  } else {}
}
intsteps$intmean[1
]
intsteps$intmean[2]
intsteps$intmean
names(intsteps)
colnames(intsteps)<-c("interval","intervalMean")
for(i in 1:17568){
  if(is.na(rawdata$steps[i]) == TRUE){
    rawdata$steps[i] <- intsteps$intMean[rawdata$interval[i]]
  } else {}
}
rawdata$interval[1]
rawdata$interval[2]
rawdata$interval[3]
intsteps$intmean
colnames(intsteps)<-c("interval","intMean")
for(i in 1:17568){
  if(is.na(rawdata$steps[i]) == TRUE){
    rawdata$steps[i] <- intsteps$intMean[rawdata$interval[i]]
  } else {}
}
intsteps
is.na(rawdata$steps)
rawdata[!complete.cases(rawdata),]
a-rawdata[!complete.cases(rawdata),]
a<-rawdata[!complete.cases(rawdata),]
head(a)
head(intsteps)
nrow(a)
a$interval[2]
intesteps$intMean[a$interval[2]]
intsteps$intMean[a$interval[2]]
intsteps$intMean[a$interval[2]/5]
intsteps$intMean[a$interval[2]/5+1]
intsteps$intMean[a$interval[5]/5+1]
nrow(rawdata)
for(i in 1:nrow(rawdata)){
  if(is.na(rawdata$steps[i]) == TRUE){
    rawdata$steps[i] <- intsteps$intMean[(rawdata$interval[i])/5+(1)]
  }
}
head(rawdata)
head(intsteps)
in.na(rawdata)
is.na(rawdata)
table(rawdata)
table(is.na(rawdata$steps))
head(rawdata)
a-rawdata[!complete.cases(rawdata),]
a<-rawdata[!complete.cases(rawdata),]
head(a)
for(i in 1:nrow(rawdata)){
  if(is.na(rawdata$steps[i]) == TRUE){
    rawdata$steps[i] <- intsteps$intMean[(rawdata$interval[i])/5+(1)]
  }
rawdata <- read.csv("activity.csv")
head(intsteps)
intsteps$intMean(299)
intsteps$intMean[299]
intsteps$intMean
intsteps
row.names(intsteps) <- intsteps$interval
interval
intsteps
## Loading and preprocessing the data
```{r}
rawdata <- read.csv("activity.csv")
```
### Finding mean of total steps taken per day by aggregating the dataset
```{r}
dailysteps <- aggregate(rawdata$steps,list(date=rawdata$date),mean)
hist(dailysteps$x,xlab="Mean steps per day",ylim=c(0,25),col = "red",
     main="Mean steps taken per day",xaxt="n")
axis(1,at=seq(0,80,10),labels=seq(0,80,10))
stepsmean <- mean(dailysteps$x,na.rm=TRUE)
stepsmedian <- median(dailysteps$x,na.rm=TRUE)
```
### Initial results
* Mean of total steps taken per day = `r round(stepsmean,2)`
* Median of the total steps taken per day = `r round(stepsmedian,2)`
```{r}
# Building dataset with mean steps taken for each interval
intsteps <- aggregate(rawdata$steps,list(interval=rawdata$interval),
                      mean,na.rm=TRUE)
colnames(intsteps) <- c("interval","intMean")
row.names(intsteps) <- intsteps$interval
      for(i in 1:nrow(rawdata)){
          if(is.na(rawdata$steps[i]) == TRUE){
            # Replacing NA's with corresponding mean from intsteps data
              rawdata$steps[i] <- intsteps$intMean[rawdata$interval[i]]
  }
q()
